// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  password  String   // Hash con bcrypt
  role      String   @default("USER")
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relaciones
  sessions Session[]
  
  @@map("users")
}

model Session {
  id        String   @id @default(cuid())
  userId    String
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
  
  // Relaciones
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("sessions")
}

model Invoice {
  id                String   @id @default(cuid())
  invoiceNumber     String   @unique
  invoiceDate       DateTime
  customerName      String
  supplierVatNumber String?
  supplierAddress   String?
  totalPriceExVat   Float
  totalPriceIncVat  Float
  taxPercentage     Float
  taxAmount         Float
  supplierName      String
  invoiceDescription String?
  internalId        String?
  driveUrl          String?
  paid              Boolean  @default(false)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  
  @@map("invoices")
}

model IssuedInvoice {
  id                String   @id @default(cuid())
  facturaID         String   @unique
  creationDate      DateTime
  fechavencimiento  DateTime
  nombrecliente     String
  cifcliente        String
  direccioncliente  String
  subtotal          Float
  total             Float
  tipoiva           Float
  cantidadproducto  Int
  estadofactura     String
  datosbancarios    String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  
  // Relación con productos
  products InvoiceProduct[]
  
  @@map("issued_invoices")
}

model InvoiceProduct {
  id              String        @id @default(cuid())
  issuedInvoiceId String
  descripcion     String
  cantidad        Int
  precioUnitario  Float
  
  // Relaciones
  issuedInvoice IssuedInvoice @relation(fields: [issuedInvoiceId], references: [id], onDelete: Cascade)
  
  @@map("invoice_products")
}

// Roles: ADMIN, USER, VIEWER (validados en la aplicación)